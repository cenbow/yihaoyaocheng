<?xml version="1.0" encoding="UTF-8"?> 
<!-- 
 **
 * Created By: XI
 * Created On: 2016-7-28 17:34:56
 *
 * Amendment History:
 * 
 * Amended By       Amended On      Amendment Description
 * ************     ***********     *********************************************
 *
 **
 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyw.yhyc.order.mapper.OrderRefundMapper">
    <cache type="com.yyw.yhyc.order.cache.LoggingRedisCache"
           flushInterval="86400000" size="1024000">
    </cache>
	<resultMap id="OrderRefundResultMapper" type="OrderRefund">
		<result column="refund_id" property="refundId"/>
		<result column="order_id" property="orderId"/>
		<result column="flow_id" property="flowId"/>
		<result column="cust_id" property="custId"/>
		<result column="supply_id" property="supplyId"/>
		<result column="refund_type" property="refundType"/>
		<result column="refund_sum" property="refundSum"/>
		<result column="refund_freight" property="refundFreight"/>
		<result column="refund_desc" property="refundDesc"/>
		<result column="refund_url" property="refundUrl"/>
		<result column="refund_date" property="refundDate"/>
		<result column="deal_result" property="dealResult"/>
		<result column="refund_status" property="refundStatus"/>
		<result column="remark" property="remark"/>
		<result column="create_user" property="createUser"/>
		<result column="create_time" property="createTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	
	<sql id="commonColumns">
		 refund_id
		, order_id
		, flow_id
		, cust_id
		, supply_id
		, refund_type
		, refund_sum
		, refund_freight
		, refund_desc
		, refund_url
		, refund_date
		, deal_result
		, refund_status
		, remark
		, create_user
		, create_time
		, update_user
		, update_time
	</sql>

    <sql id="commonColumnsNotPK">
				 order_id
				, flow_id
				, cust_id
				, supply_id
				, refund_type
				, refund_sum
				, refund_freight
				, refund_desc
				, refund_url
				, refund_date
				, deal_result
				, refund_status
				, remark
				, create_user
				, create_time
				, update_user
				, update_time
    </sql>
	
	<sql id="commonProcessDateColumns">
		 refund_id
		, order_id
		, flow_id
		, cust_id
		, supply_id
		, refund_type
		, refund_sum
		, refund_freight
		, refund_desc
		, refund_url
		, date_format(refund_date, '%Y-%m-%d %H:%i:%s') refund_date
		, deal_result
		, refund_status
		, remark
		, create_user
		, date_format(create_time, '%Y-%m-%d %H:%i:%s') create_time
		, update_user
		, date_format(update_time, '%Y-%m-%d %H:%i:%s') update_time
	</sql>
	
	<sql id="commonCondition">
		<if test="refundId!= null and refundId!= ''"> 
			AND refund_id=#{refundId}
		</if>
		<if test="orderId!= null and orderId!= ''"> 
			AND order_id=#{orderId}
		</if>
		<if test="flowId!= null and flowId!= ''"> 
			AND flow_id=#{flowId}
		</if>
		<if test="custId!= null and custId!= ''"> 
			AND cust_id=#{custId}
		</if>
		<if test="supplyId!= null and supplyId!= ''"> 
			AND supply_id=#{supplyId}
		</if>
		<if test="refundType!= null and refundType!= ''"> 
			AND refund_type=#{refundType}
		</if>
		<if test="refundSum!= null and refundSum!= ''"> 
			AND refund_sum=#{refundSum}
		</if>
		<if test="refundFreight!= null and refundFreight!= ''"> 
			AND refund_freight=#{refundFreight}
		</if>
		<if test="refundDesc!= null and refundDesc!= ''"> 
			AND refund_desc=#{refundDesc}
		</if>
		<if test="refundUrl!= null and refundUrl!= ''"> 
			AND refund_url=#{refundUrl}
		</if>
		<if test="refundDate!= null and refundDate!= ''"> 
			AND refund_date=str_to_date(#{refundDate},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="dealResult!= null and dealResult!= ''"> 
			AND deal_result=#{dealResult}
		</if>
		<if test="refundStatus!= null and refundStatus!= ''"> 
			AND refund_status=#{refundStatus}
		</if>
		<if test="remark!= null and remark!= ''"> 
			AND remark=#{remark}
		</if>
		<if test="createUser!= null and createUser!= ''"> 
			AND create_user=#{createUser}
		</if>
		<if test="createTime!= null and createTime!= ''"> 
			AND create_time=str_to_date(#{createTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="updateUser!= null and updateUser!= ''"> 
			AND update_user=#{updateUser}
		</if>
		<if test="updateTime!= null and updateTime!= ''"> 
			AND update_time=str_to_date(#{updateTime},'%Y-%m-%d %H:%i:%s')
		</if>
	</sql>
	
	<insert id="save" parameterType="OrderRefund">
		<![CDATA[ INSERT INTO t_order_refund ( ]]>
			<include refid="commonColumnsNotPK"/>
		<![CDATA[
			) VALUES ( 
				 #{orderId}
				, #{flowId}
				, #{custId}
				, #{supplyId}
				, #{refundType}
				, #{refundSum}
				, #{refundFreight}
				, #{refundDesc}
				, #{refundUrl}
				, str_to_date(#{refundDate},'%Y-%m-%d %H:%i:%s')
				, #{dealResult}
				, #{refundStatus}
				, #{remark}
				, #{createUser}
				, str_to_date(#{createTime},'%Y-%m-%d %H:%i:%s')
				, #{updateUser}
				, str_to_date(#{updateTime},'%Y-%m-%d %H:%i:%s')
  ) ]]>
	</insert>
	<update id="update" parameterType="OrderRefund">
		<![CDATA[ UPDATE t_order_refund SET 
			 refund_id=#{refundId} 
			, order_id=#{orderId} 
			, flow_id=#{flowId} 
			, cust_id=#{custId} 
			, supply_id=#{supplyId} 
			, refund_type=#{refundType} 
			, refund_sum=#{refundSum} 
			, refund_freight=#{refundFreight} 
			, refund_desc=#{refundDesc} 
			, refund_url=#{refundUrl} 
			, refund_date=str_to_date(#{refundDate},'%Y-%m-%d %H:%i:%s')
			, deal_result=#{dealResult} 
			, refund_status=#{refundStatus} 
			, remark=#{remark} 
			, create_user=#{createUser} 
			, create_time=str_to_date(#{createTime},'%Y-%m-%d %H:%i:%s')
			, update_user=#{updateUser} 
			, update_time=str_to_date(#{updateTime},'%Y-%m-%d %H:%i:%s')
		WHERE refund_id = #{refundId}  ]]>
	</update>
	<delete id="deleteByPK" parameterType="java.lang.Integer">
		<![CDATA[ DELETE FROM t_order_refund WHERE refund_id = #{refundId}  ]]>
	</delete>
	<delete id="deleteByPKeys" parameterType="map">
		DELETE FROM t_order_refund WHERE
		<foreach collection="primaryKeys" index="index" item="id"
			open=" refund_id IN(" separator="," close=") ">
			${id}
		</foreach>
	</delete>
	<delete id="deleteByProperty" parameterType="OrderRefund">
		DELETE FROM t_order_refund WHERE 1 = 1
		<include refid="commonCondition"/>
	</delete>
	<select id="getByPK" parameterType="java.lang.Integer" resultMap="OrderRefundResultMapper">
		<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
		FROM t_order_refund WHERE refund_id = #{refundId}  
	</select>
	<select id="list" resultMap="OrderRefundResultMapper">
		<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
 		FROM t_order_refund
	</select>
	<select id="listByProperty" parameterType="OrderRefund" resultMap="OrderRefundResultMapper">
		<![CDATA[ SELECT ]]>
			<include refid="commonProcessDateColumns"/>
		FROM t_order_refund WHERE 1=1 
		<include refid="commonCondition"/>
	</select>
	<select id="listPaginationByProperty" parameterType="OrderRefund" resultMap="OrderRefundResultMapper">
		SELECT 
		<include refid="commonProcessDateColumns"/>
		FROM t_order_refund WHERE 1=1 
		<include refid="commonCondition"/>
	</select>
	<select id="findByCount" parameterType="OrderRefund" resultType="int">
		SELECT count(1) AS totalcount FROM t_order_refund WHERE 1=1 
		<include refid="commonCondition"/>
	</select>
</mapper>